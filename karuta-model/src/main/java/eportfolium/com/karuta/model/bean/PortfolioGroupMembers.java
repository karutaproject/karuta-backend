package eportfolium.com.karuta.model.bean;
// Generated 13 juin 2019 19:14:13 by Hibernate Tools 5.2.10.Final

import java.io.Serializable;

import javax.persistence.AssociationOverride;
import javax.persistence.AssociationOverrides;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * PortfolioGroupMembers generated by hbm2java
 */
@Entity
@Table(name = "portfolio_group_members")
@AssociationOverrides({
		@AssociationOverride(name = "id.portfolioGroup", joinColumns = @JoinColumn(name = "pg", nullable = false)),
		@AssociationOverride(name = "id.portfolio", joinColumns = @JoinColumn(name = "portfolio_id", nullable = false)) })
public class PortfolioGroupMembers implements Serializable {

	private static final long serialVersionUID = 7694077274860630934L;

	private PortfolioGroupMembersId id;

	public PortfolioGroupMembers() {
	}

	public PortfolioGroupMembers(PortfolioGroupMembersId id) {
		this.id = id;
	}

	@EmbeddedId
	public PortfolioGroupMembersId getId() {
		return this.id;
	}

	public void setId(PortfolioGroupMembersId id) {
		this.id = id;
	}

	@Transient
	public PortfolioGroup getPortfolioGroup() {
		return getId().getPortfolioGroup();
	}

	public void setPortfolioGroup(PortfolioGroup pg) {
		getId().setPortfolioGroup(pg);
	}

	@Transient
	public Portfolio getPortfolio() {
		return getId().getPortfolio();
	}

	public void setPortfolio(Portfolio portfolio) {
		getId().setPortfolio(portfolio);
	}

	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;

		PortfolioGroupMembers that = (PortfolioGroupMembers) o;

		if (getId() != null ? !getId().equals(that.getId()) : that.getId() != null)
			return false;

		return true;
	}

	@Override
	public int hashCode() {
		return (getId() != null ? getId().hashCode() : 0);
	}

}
