package eportfolium.com.karuta.model.bean;
// Generated 13 juin 2019 19:14:13 by Hibernate Tools 5.2.10.Final

import java.io.Serializable;

import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.MapsId;
import javax.persistence.Table;

/**
 * CredentialGroupMembers generated by hbm2java
 */
@Entity
@Table(name = "credential_group_members")
//@AssociationOverrides({
//		@AssociationOverride(name = "id.credentialGroup", joinColumns = @JoinColumn(name = "cg", nullable = false)),
//		@AssociationOverride(name = "id.credential", joinColumns = @JoinColumn(name = "userid", nullable = false)) })
public class CredentialGroupMembers implements Serializable {

	private static final long serialVersionUID = 2334699588563188342L;

	private CredentialGroupMembersId id;
	private CredentialGroup credentialGroup;
	private Credential credential;

	public CredentialGroupMembers() {
	}

	public CredentialGroupMembers(CredentialGroupMembersId id) {
		this.id = id;
	}

	@EmbeddedId
	public CredentialGroupMembersId getId() {
		return this.id;
	}

	public void setId(CredentialGroupMembersId id) {
		this.id = id;
	}

	@JoinColumn(name = "cg", insertable = false, updatable = false)
	@MapsId("credentialGroupId")
	@ManyToOne(fetch = FetchType.LAZY)
	public CredentialGroup getCredentialGroup() {
		return credentialGroup;
	}

	public void setCredentialGroup(CredentialGroup cg) {
		this.credentialGroup = cg;
	}

	@JoinColumn(name = "userid")
	@MapsId("credentialId")
	@ManyToOne(fetch = FetchType.LAZY)
	public Credential getCredential() {
		return credential;
	}

	public void setCredential(Credential credential) {
		this.credential = credential;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o)
			return true;
		if (o == null || getClass() != o.getClass())
			return false;

		CredentialGroupMembers that = (CredentialGroupMembers) o;

		if (getId() != null ? !getId().equals(that.getId()) : that.getId() != null)
			return false;

		return true;
	}

	@Override
	public int hashCode() {
		return (getId() != null ? getId().hashCode() : 0);
	}

}
